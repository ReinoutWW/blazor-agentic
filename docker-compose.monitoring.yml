version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: healthvoice-sqlserver
    ports:
      - "1434:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=HealthVoice123! # demo password
      - MSSQL_PID=Express
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - healthvoice-net
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'HealthVoice123!' -C -Q 'SELECT 1'"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s

  healthvoice-blazor:
    build:
      context: .
      dockerfile: HealthVoice.Blazor/Dockerfile
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlServer=Server=sqlserver,1433;Database=HealthVoiceDB;User Id=sa;Password=HealthVoice123!;TrustServerCertificate=true;
    depends_on:
      sqlserver:
        condition: service_healthy
      healthvoice-api:
        condition: service_started
    networks:
      - healthvoice-net

  healthvoice-api:
    build:
      context: .
      dockerfile: HealthVoice.Api/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlServer=Server=sqlserver,1433;Database=HealthVoiceDB;User Id=sa;Password=HealthVoice123!;TrustServerCertificate=true;
    depends_on:
      sqlserver:
        condition: service_healthy
      prometheus:
        condition: service_started
    networks:
      - healthvoice-net

  prometheus:
    image: prom/prometheus:latest
    container_name: healthvoice-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - healthvoice-net

  grafana:
    image: grafana/grafana:latest
    container_name: healthvoice-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=healthvoice123
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - healthvoice-net

  healthchecks-ui:
    image: xabarilcoding/healthchecksui:latest
    container_name: healthvoice-healthchecks
    ports:
      - "8080:80"
    environment:
      - HealthChecksUI__HealthChecks__0__Name=HealthVoice API
      - HealthChecksUI__HealthChecks__0__Uri=http://healthvoice-api:8080/health/ready
      - HealthChecksUI__HealthChecks__1__Name=HealthVoice Blazor  
      - HealthChecksUI__HealthChecks__1__Uri=http://healthvoice-blazor:8080/health/ready
      - HealthChecksUI__EvaluationTimeInSeconds=30
      - HealthChecksUI__MinimumSecondsBetweenFailureNotifications=60
      - HealthChecksUI__DisableMigrations=false
    depends_on:
      - healthvoice-api
      - healthvoice-blazor
    networks:
      - healthvoice-net

volumes:
  prometheus-data:
  grafana-data:
  sqlserver-data:

networks:
  healthvoice-net:
    driver: bridge 